name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python:
    name: Python lint & test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Create venv and install dependencies (uv)
        run: |
          uv venv .venv
          uv pip install --python .venv/bin/python -e .[dev]

      - name: Lint (ruff)
        run: uv run ruff check .

      - name: Run pre-commit (format & lint all files)
        run: uv run pre-commit run --all-files --show-diff-on-failure

      - name: Run Django tests (with coverage)
        env:
          DJANGO_SETTINGS_MODULE: config.settings.test
        run: |
          uv run coverage run --source=apps/backend/apps -m django --settings=config.settings.test apps/backend/manage.py test -v 2
          uv run coverage xml -o coverage.xml

      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-python
          path: coverage.xml

  frontend:
    name: Frontend lint & build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: apps/frontend/package-lock.json

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Lint (eslint)
        run: npm run lint

      - name: Build (vite)
        run: npm run build
