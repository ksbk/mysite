name: Dependency Updates

on:
  schedule:
    - cron: '0 8 * * 1'  # Weekly on Monday at 8 AM
  workflow_dispatch:

jobs:
  update-python-deps:
    name: Update Python Dependencies
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Update Python dependencies
      run: |
        uv venv
        uv pip install --python .venv/bin/python -e .
        uv pip compile pyproject.toml --upgrade --output-file requirements.txt
      continue-on-error: true

    - name: Test with updated dependencies
      run: |
        source .venv/bin/activate
        cd apps/backend
        python manage.py check
        python manage.py test apps.contact.tests -v 1
      env:
        DJANGO_SETTINGS_MODULE: config.settings.test
        SECRET_KEY: test-secret-key-for-updates
      continue-on-error: true

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Python dependencies'
        title: 'ðŸ”„ Update Python Dependencies'
        body: |
          ## Python Dependency Updates

          This PR updates Python dependencies to their latest versions.

          ### Changes
          - Updated dependencies in pyproject.toml
          - Generated new requirements.txt

          ### Testing
          - âœ… Django system checks passed
          - âœ… Basic tests passed

          Please review and merge if all CI checks pass.
        branch: chore/update-python-deps
        delete-branch: true

  update-frontend-deps:
    name: Update Frontend Dependencies
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "20"
        cache: 'npm'
        cache-dependency-path: apps/frontend/package-lock.json

    - name: Update frontend dependencies
      working-directory: apps/frontend
      run: |
        npm update
        npm audit fix --audit-level=high
      continue-on-error: true

    - name: Test with updated dependencies
      working-directory: apps/frontend
      run: |
        npm run build
        npm run test:run
      continue-on-error: true

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update frontend dependencies'
        title: 'ðŸ”„ Update Frontend Dependencies'
        body: |
          ## Frontend Dependency Updates

          This PR updates frontend dependencies to their latest versions.

          ### Changes
          - Updated npm dependencies
          - Fixed security vulnerabilities
          - Updated package-lock.json

          ### Testing
          - âœ… Build successful
          - âœ… Tests passed

          Please review and merge if all CI checks pass.
        branch: chore/update-frontend-deps
        delete-branch: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "20"
        cache: 'npm'
        cache-dependency-path: apps/frontend/package-lock.json

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Install dependencies
      run: |
        uv venv
        uv pip install --python .venv/bin/python -e .

    - name: Python security audit
      run: |
        source .venv/bin/activate
        safety check --json --output python-security-audit.json
      continue-on-error: true

    - name: Frontend security audit
      working-directory: apps/frontend
      run: |
        npm install
        npm audit --json > ../frontend-security-audit.json
      continue-on-error: true

    - name: Upload security audit reports
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-reports
        path: |
          python-security-audit.json
          frontend-security-audit.json
        retention-days: 30

    - name: Create security issue if vulnerabilities found
      run: |
        if [ -f python-security-audit.json ]; then
          PYTHON_VULNS=$(cat python-security-audit.json | jq '.vulnerabilities | length')
          if [ "$PYTHON_VULNS" -gt 0 ]; then
            echo "Found $PYTHON_VULNS Python vulnerabilities"
            # gh issue create --title "ðŸš¨ Python Security Vulnerabilities Found" --body "See security audit report in actions"
          fi
        fi

        if [ -f frontend-security-audit.json ]; then
          FRONTEND_VULNS=$(cat frontend-security-audit.json | jq '.metadata.vulnerabilities.total')
          if [ "$FRONTEND_VULNS" -gt 0 ]; then
            echo "Found $FRONTEND_VULNS frontend vulnerabilities"
            # gh issue create --title "ðŸš¨ Frontend Security Vulnerabilities Found" --body "See security audit report in actions"
          fi
        fi
      continue-on-error: true
